---
title: Tag Label (Advanced)
editor: source
---

This script is meant to be used by familiar users of GeoPressureTemplate. For new user, please use `1-label.qmd` . The script actually covers both `1-label.qmd` and `2-twilight.qmd` .

```{r setup}
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(GeoPressureR)
library(ggplot2)
library(plotly)

id <- "18LX"
```

## Sensor data and crop date

```{r crop_date}
ggplotly(
  tag_create(id, quiet = TRUE) |>
    plot(type = "pressure", plot_plotly = FALSE) +
    geom_vline(
      xintercept = as.numeric(c(
        as.POSIXct(config::get("tag_create", id)$crop_start),
        as.POSIXct(config::get("tag_create", id)$crop_end)
      )),
      color = "red", lwd = 1
    )
)
```

Create the tag

```{r}
tag <- tag_create(
  id,
  crop_start = config::get("crop_start", id),
  crop_end = config::get("crop_end", id)
)
```

## Label tag

```{r write_label}
tag_label_write(tag)
```

Edit on [https://trainset.raphaelnussbaumer.com/].

```{r read_label}
tag <- tag_label(tag)
```

Plot pressure timeseries

```{r}
plot(tag, type = "pressure")
```

## Compute pressure map

```{r pressure_map}
tag <- tag_set_map(tag,
  extent = config::get("extent", id),
  scale = config::get("scale", id),
  known = config::get("known", id),
  include_stap_id = config::get("include_stap_id", id),
  include_min_duration = config::get("include_min_duration", id)
) |>
  geopressure_map(
    max_sample = config::get("max_sample", id),
    margin = config::get("margin", id),
    sd = config::get("sd", id),
    thr_mask = config::get("thr_mask", id),
    log_linear_pooling_weight = config::get("log_linear_pooling_weight", id)
  )
```

## Geopressureviz

Directly plot the likelihood map and draw the path. Query the pressure only for the stap that need to be checked.

```{r}
geopressureviz(
  tag,
  path = tag2path(tag, interp = 1) # interpolate positions of stap lasting < 1 day.
  # path = pressurepath # Use this once computed (see below)
)
```

## Twilight

Adjust `twl_offset`.

```{r}
tag <- twilight_create(
  tag,
  twl_offset = config::get("twl_offset", id)
)
plot(tag, type = "twilight")
```

Write label

```{r}
twilight_label_write(tag)
```

Edit on [https://trainset.raphaelnussbaumer.com/].

Check labelled twilights together with the expected twilight lines from the path drawn on geopressureviz

```{r twilight_read}
tag <- twilight_label_read(tag)
plot(tag,
  type = "twilight",
  twilight_line = path2twilight(geopressureviz_path)
)
```

Compute light map

```{r light_map}
tag <- geolight_map(
  tag,
  twl_calib_adjust = config::get("twl_calib_adjust", id),
  twl_llp = config::get("twl_llp", id)
)
```

Refine the path and label based on pressure and light combined.

```{r}
geopressureviz(
  tag,
  path = geopressureviz_path # start from the existing drawn path
)
```


## Compute pressurepath

Final check with the time-consuming `pressurepath`

```{r pressurepath}
pressurepath <- pressurepath_create(
  tag,
  path = geopressureviz_path
)
```

Plot

```{r}
plot_pressurepath(pressurepath)
plot_pressurepath(pressurepath, type = "histogram")
plot_pressurepath(pressurepath, type = "altitude")
```
